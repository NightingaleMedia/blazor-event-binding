@page "/binder"
@inject IJSRuntime js
<PageTitle>Bind</PageTitle>

<div style="margin: 20px auto; background-color: rgba(0,0,25,0.75); color: white; padding: 1rem;">
    <h2>@model.BindSelection</h2>

</div>
<p>Hello world</p>

<br />
<h2>select 1</h2>
<select @onchange=model.SetSelection1>
    @foreach (string option in model.selectionOptions)
    {
        <option selected="model.currentSelectionString === @option" value="@option" name="@option">@option</option>
    }
</select>

<br />
<div>
    <h2>select 2</h2>
    <select @bind=model.BindSelection>
        @foreach (string option in model.selectionOptions)
        {
            <option value="@option" name="@option">@option</option>
        }
    </select>
</div>
<br />


@* <h2>input 3</h2>
    <input type="text" @bind=BindSelection name="test">
    </input> *@


@code {




    public Model model = new Model();

    public class Model
    {
        public string[] selectionOptions = { "Chart 1", "Chart 2 " };
        private string? currentSelectionString;

        public string BindSelection
        {
            get { return currentSelectionString; }
            set
            {
                Console.WriteLine(value);
                if (currentSelectionString == value) return;
                currentSelectionString = value;

                @* BindingValueChanged.InvokeAsync(value); *@


            }
        }
        public void SetSelection1(ChangeEventArgs e)
        {
            currentSelectionString = (e.Value.ToString());
        }
    }

}